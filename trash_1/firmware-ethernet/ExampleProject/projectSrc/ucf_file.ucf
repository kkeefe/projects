# 2012-06-05 revised for SCROD revA2
# new things for SCROD revA2:
#NET DO_NOT_USE_ME LOC = AF3; # on SCROD revA2, CSO_B (pin AF3) should not be driven low during normal running!
#NET EN_250 LOC = D22 | IOSTANDARD = LVCMOS33; # test to see if jumper is installed; drive low to disable oscillator; called DIS on schematic
#NET EN_156 LOC = D21 | IOSTANDARD = LVCMOS33; # test to see if jumper is installed; drive low to disable oscillator
#NET thermal_alarm_active_low LOC = E16; # this is low if the temperature sensor got too hot (settable threshold) until an I2C transfer is initiated to clear it
# 2012-11-27 revised for boardstack v2
# boardstack v2 swapped row0&2, row1&3 for many things
# 2013-01-24 fixed 6 typos
# 2013-01-29 answered one question and renamed DOE to be DOE_active_low, since it's inverted on the new carriers
#Timing constraints specific to our application
#Those related to the Aurora interface are below
#Timing constraints for clock domain crossing registers
INST "*" TNM_NET = FFS "EVERYTHING";
INST "*cdc_reg1" TNM_NET = FFS "CLOCK_DOMAIN_CROSSING_REGS";
TIMESPEC TS_CDC = FROM "EVERYTHING" TO "CLOCK_DOMAIN_CROSSING_REGS" 8 ns DATAPATHONLY;
#Timing constraints for I2C (multi-cycle)
NET "map_i2c_bus*/*CLOCK_ENABLE*" TNM_NET = FFS "I2C_ENABLES";
NET "map_dac_interfaces/map_external_dac_control/*CLK_ENABLE*" TNM_NET = FFS "I2C_ENABLES";
####TIMESPEC TS_I2C_ENABLES = FROM "I2C_ENABLES" TO "I2C_ENABLES" TS_BOARD_CLOCK*40;
#The PLL locked counter runs off of a local board-related, but is read off of the system clock, which may be distributed.
#It only changes once per second... ignoring this as a timing constraint.
####NET "map_clock_generation/internal_PLL_LOCKED_COUNTER*" TIG;
####NET "map_clock_generation/map_pll_lock_counter_ce/internal_COUNTER_RESET" TIG;
#Another similar to the above for checking FTSW stability
####NET "map_clock_generation/internal_FTSW_STABLE_COUNTER*" TIG;
#Yet another for a similar FTSW counter that's brought out to the top level
####NET "map_clock_generation/internal_FTSW_LOCKED_COUNTER*" TIG;
#Registers are slow control... we can accept some timing glitches immediately after writing one.
####NET "internal_OUTPUT_REGISTERS*" TIG;
#Path from LAST_WINDOW_SAMPLED from sampler to digitizer has a very long delay in between
#(i.e., the full time for the ROI parser to find the first segment of interest).
#It is effectively a false path, so ignore this path.  The same is true, though not quite as
#long of a path, to the ROI block.
####NET "map_irs3d_sdr/internal_LAST_WINDOW_SAMPLED*" TIG;
#Path from sampling state machine to ROI and event builder are also effectively false paths, like above
NET "map_irs3d_sdr/map_sampling_control/*" TNM_NET = FFS "SAMP_SIGNALS";
NET "map_irs3d_sdr/map_irs2_roi_parser/*"  TNM_NET = FFS "ROI_SIGNALS";
NET "map_irs3d_sdr/map_event_builder/*"    TNM_NET = FFS "EVT_BUILDER_SIGNALS";
####TIMESPEC TS_SAMP_TO_ROI = FROM "SAMP_SIGNALS" TO "ROI_SIGNALS" TIG;
####TIMESPEC TS_SAMP_TO_EVT = FROM "SAMP_SIGNALS" TO "EVT_BUILDER_SIGNALS" TIG;
#####TIMESPEC TS_EVT_TO_SAMP = FROM "EVT_BUILDER_SIGNALS" TO "SAMP_SIGNALS" TIG;
#Path from regular 50 MHz clock to SST CLK for the purposes of generating PCLK
#There's handshaking done there, so I'm not too worried about this.
NET "map_dac_interfaces/map_irs3b_program_dacs_parallel/internal_REGISTER_COUNTER*" TNM_NET = FFS "CLK50_DAC";
NET "map_dac_interfaces/map_irs3b_program_dacs_parallel/internal_STATE_FSM*"        TNM_NET = FFS "CLK50_DAC";
NET "map_dac_interfaces/map_irs3b_program_dacs_parallel/internal_PCLK_*"            TNM_NET = FFS "CLKSST_DAC";
NET "map_dac_interfaces/map_irs3b_program_dacs_parallel/internal_PCLK_STATE_FSM*"   TNM_NET = FFS "CLKSST_DAC";
####TIMESPEC TS_DAC_CLK_TO_SST = FROM  "CLK50_DAC" TO "CLKSST_DAC" TIG;
####TIMESPEC TS_DAC_SST_TO_CLK = FROM "CLKSST_DAC" TO "CLK50_DAC" TIG;
###############ASIC CONNECTIONS########################
# 2015.09.19 Modified SST signals from column wise to point-to-point for new Carrier 02 and 13
# KN
NET AsicIn_SAMPLING_HOLD_MODE_R0_C<0> LOC = AB13;
NET AsicIn_SAMPLING_HOLD_MODE_R0_C<1> LOC = B24;
NET AsicIn_SAMPLING_HOLD_MODE_R0_C<2> LOC = N9;
NET AsicIn_SAMPLING_HOLD_MODE_R0_C<3> LOC = K20;
NET AsicIn_SAMPLING_HOLD_MODE_R1_C<0> LOC = AA10;
NET AsicIn_SAMPLING_HOLD_MODE_R1_C<1> LOC = K1;
NET AsicIn_SAMPLING_HOLD_MODE_R1_C<2> LOC = L8;
NET AsicIn_SAMPLING_HOLD_MODE_R1_C<3> LOC = C24;
NET AsicIn_SAMPLING_HOLD_MODE_R2_C<0> LOC = V11;
NET AsicIn_SAMPLING_HOLD_MODE_R2_C<1> LOC = W20;
NET AsicIn_SAMPLING_HOLD_MODE_R2_C<2> LOC = L9;
NET AsicIn_SAMPLING_HOLD_MODE_R2_C<3> LOC = H21;
NET AsicIn_SAMPLING_HOLD_MODE_R3_C<0> LOC = AF6;
NET AsicIn_SAMPLING_HOLD_MODE_R3_C<1> LOC = L2;
NET AsicIn_SAMPLING_HOLD_MODE_R3_C<2> LOC = K7;
NET AsicIn_SAMPLING_HOLD_MODE_R3_C<3> LOC = N25;
# SST_IN --LM "repurposed" to SSTP - keep same meaning and name!
#NET AsicIn_SAMPLING_HOLD_MODE_C<0> LOC = W8;
#NET AsicIn_SAMPLING_HOLD_MODE_C<1> LOC = AE2;
#NET AsicIn_SAMPLING_HOLD_MODE_C<2> LOC = AC3;
#NET AsicIn_SAMPLING_HOLD_MODE_C<3> LOC = N19;
# TRG outputs
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<0> LOC =   C1;
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<1> LOC =   D1;
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<2> LOC =  AD5;
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<3> LOC =   Y9;
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<4> LOC =  AB9;
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<5> LOC =  W12;
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<6> LOC =  AA6;
NET AsicOut_TRIG_OUTPUT_R0_C0_CH<7> LOC =   H1;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<0> LOC =   N2;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<1> LOC =   H5;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<2> LOC =  Y15;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<3> LOC =  U15;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<4> LOC =   M3;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<5> LOC =   R4;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<6> LOC =   V4;
NET AsicOut_TRIG_OUTPUT_R0_C1_CH<7> LOC =  AB3;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<0> LOC =  B25;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<1> LOC =  E26;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<2> LOC =   P6;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<3> LOC =   U8;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<4> LOC =  G25;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<5> LOC =  K26;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<6> LOC =  L25;
NET AsicOut_TRIG_OUTPUT_R0_C2_CH<7> LOC =  U20;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<0> LOC =  F23;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<1> LOC =  H22;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<2> LOC =  E24;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<3> LOC =  P21;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<4> LOC =  J22;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<5> LOC =  M23;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<6> LOC =  T24;
NET AsicOut_TRIG_OUTPUT_R0_C3_CH<7> LOC = AA24;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<0> LOC =   C2;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<1> LOC =   B1;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<2> LOC =  AC6;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<3> LOC =   W9;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<4> LOC =  V10;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<5> LOC =  Y13;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<6> LOC =  P10;
NET AsicOut_TRIG_OUTPUT_R1_C0_CH<7> LOC =   J1;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<0> LOC =   N1;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<1> LOC =   G4;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<2> LOC =  V14;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<3> LOC = AA19;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<4> LOC =   L3;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<5> LOC =   P5;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<6> LOC =   U5;
NET AsicOut_TRIG_OUTPUT_R1_C1_CH<7> LOC =  AA3;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<0> LOC =  C26;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<1> LOC =  E25;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<2> LOC =   R6;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<3> LOC =   V7;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<4> LOC =  H26;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<5> LOC =  L26;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<6> LOC =  M26;
NET AsicOut_TRIG_OUTPUT_R1_C2_CH<7> LOC =  T19;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<0> LOC =  E23;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<1> LOC =  G23;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<2> LOC =  D24;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<3> LOC =  R21;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<4> LOC =  J24;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<5> LOC =  N23;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<6> LOC =  R24;
NET AsicOut_TRIG_OUTPUT_R1_C3_CH<7> LOC =  W24;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<0> LOC =   F1;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<1> LOC =   E2;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<2> LOC =  AA7;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<3> LOC =  AB7;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<4> LOC =  W10;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<5> LOC = AA11;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<6> LOC =  Y12;
NET AsicOut_TRIG_OUTPUT_R2_C0_CH<7> LOC =   G1;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<0> LOC =   F3;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<1> LOC =   K3;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<2> LOC =  W16;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<3> LOC = AA21;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<4> LOC =   N5;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<5> LOC =   U3;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<6> LOC =   Y3;
NET AsicOut_TRIG_OUTPUT_R2_C1_CH<7> LOC =  AC4;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<0> LOC =  A25;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<1> LOC =  C25;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<2> LOC =   M8;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<3> LOC =   R8;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<4> LOC =  F26;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<5> LOC =  J25;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<6> LOC =   U9;
NET AsicOut_TRIG_OUTPUT_R2_C2_CH<7> LOC =  K18;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<0> LOC =  H24;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<1> LOC =  K24;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<2> LOC =  F22;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<3> LOC =  M19;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<4> LOC =  M24;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<5> LOC =  P24;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<6> LOC =  V24;
NET AsicOut_TRIG_OUTPUT_R2_C3_CH<7> LOC = AC23;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<0> LOC =   E1;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<1> LOC =   B2;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<2> LOC =   W7;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<3> LOC =  AA8;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<4> LOC = AB11;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<5> LOC = AA13;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<6> LOC =  V13;
NET AsicOut_TRIG_OUTPUT_R3_C0_CH<7> LOC =   G2;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<0> LOC =   E3;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<1> LOC =   J4;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<2> LOC = AA18;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<3> LOC =  Y17;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<4> LOC =   N3;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<5> LOC =   T3;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<6> LOC =   W3;
NET AsicOut_TRIG_OUTPUT_R3_C1_CH<7> LOC =  AB5;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<0> LOC =  B26;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<1> LOC =  D26;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<2> LOC =   N7;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<3> LOC =   T8;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<4> LOC =  G26;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<5> LOC =  J26;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<6> LOC =  R18;
NET AsicOut_TRIG_OUTPUT_R3_C2_CH<7> LOC =  V21;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<0> LOC =  G24;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<1> LOC =  J23;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<2> LOC =  F24;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<3> LOC =  N20;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<4> LOC =  K22;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<5> LOC =  L23;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<6> LOC =  T22;
NET AsicOut_TRIG_OUTPUT_R3_C3_CH<7> LOC = AB24;
# PCLK
NET AsicIn_PARALLEL_CLOCK_C0_R<0> LOC = R2;
NET AsicIn_PARALLEL_CLOCK_C1_R<0> LOC = K5;
NET AsicIn_PARALLEL_CLOCK_C2_R<0> LOC = N6;
NET AsicIn_PARALLEL_CLOCK_C3_R<0> LOC = G20;
NET AsicIn_PARALLEL_CLOCK_C0_R<1> LOC = T1;
NET AsicIn_PARALLEL_CLOCK_C1_R<1> LOC = L4;
NET AsicIn_PARALLEL_CLOCK_C2_R<1> LOC = N8;
NET AsicIn_PARALLEL_CLOCK_C3_R<1> LOC = R19;
NET AsicIn_PARALLEL_CLOCK_C0_R<2> LOC = P1;
NET AsicIn_PARALLEL_CLOCK_C1_R<2> LOC = J3;
NET AsicIn_PARALLEL_CLOCK_C2_R<2> LOC = L7;
NET AsicIn_PARALLEL_CLOCK_C3_R<2> LOC = K21;
NET AsicIn_PARALLEL_CLOCK_C0_R<3> LOC = R1;
NET AsicIn_PARALLEL_CLOCK_C1_R<3> LOC = J5;
NET AsicIn_PARALLEL_CLOCK_C2_R<3> LOC = M6;
NET AsicIn_PARALLEL_CLOCK_C3_R<3> LOC = H20;
# serial interface for register bank inside ASIC
NET AsicIn_CLEAR_ALL_REGISTERS LOC = AC22; # REGCLR
NET AsicIn_SERIAL_SHIFT_CLOCK LOC = V18; # on SCROD revA2, this is overloaded with the SPI signals (which shouldn't matter during normal operation)
NET AsicIn_SERIAL_INPUT LOC = W19; # on SCROD revA2, this is overloaded with the SPI signals (which shouldn't matter during normal operation)
#Wilkinson count rate monitor pins -- Now repurposed as DONE_IN
#NET AsicOut_MONITOR_WILK_COUNTER_C0_R<2> LOC = V11 ;
#NET AsicOut_MONITOR_WILK_COUNTER_C1_R<2> LOC = W20 ;
#NET AsicOut_MONITOR_WILK_COUNTER_C2_R<2> LOC = L9  ;
#NET AsicOut_MONITOR_WILK_COUNTER_C3_R<2> LOC = H21 ;
#NET AsicOut_MONITOR_WILK_COUNTER_C0_R<3> LOC = Y11 ;
#NET AsicOut_MONITOR_WILK_COUNTER_C1_R<3> LOC = AB22;
#NET AsicOut_MONITOR_WILK_COUNTER_C2_R<3> LOC = M9  ;
#NET AsicOut_MONITOR_WILK_COUNTER_C3_R<3> LOC = J20 ;
#NET AsicOut_MONITOR_WILK_COUNTER_C0_R<0> LOC = AB13;
#NET AsicOut_MONITOR_WILK_COUNTER_C1_R<0> LOC = B24 ; # on SCROD revA2, J2_045_AF23 is now J2_045_B24
#NET AsicOut_MONITOR_WILK_COUNTER_C2_R<0> LOC = N9  ;
#NET AsicOut_MONITOR_WILK_COUNTER_C3_R<0> LOC = K20 ;
#NET AsicOut_MONITOR_WILK_COUNTER_C0_R<1> LOC = V12 ;
#NET AsicOut_MONITOR_WILK_COUNTER_C1_R<1> LOC = AF22;
#NET AsicOut_MONITOR_WILK_COUNTER_C2_R<1> LOC = R9  ;
#NET AsicOut_MONITOR_WILK_COUNTER_C3_R<1> LOC = L21 ;
# 2015.09.10 DONE_IN was removed (modified to a pullup) on new Carrier02, Carrier13
#
#NET DONE_IN<8> LOC = V11 ;
#NET DONE_IN<9> LOC = W20 ;
#NET DONE_IN<10> LOC = L9  ;
#NET DONE_IN<11> LOC = H21 ;
#NET DONE_IN<12> LOC = Y11 ;
#NET DONE_IN<13> LOC = AB22;
#NET DONE_IN<14> LOC = M9  ;
#NET DONE_IN<15> LOC = J20 ;
#NET DONE_IN<0> LOC = AB13;
#NET DONE_IN<1> LOC = B24 ; # on SCROD revA2, J2_045_AF23 is now J2_045_B24
#NET DONE_IN<2> LOC = N9  ;
#NET DONE_IN<3> LOC = K20 ;
#NET DONE_IN<4> LOC = V12 ;
#NET DONE_IN<5> LOC = AF22;
#NET DONE_IN<6> LOC = R9  ;
#NET DONE_IN<7> LOC = L21 ;
#Sampling rate monitor pins (RCO_SSXMON)
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C0_R<0> LOC = AF4;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C1_R<0> LOC = G3;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C2_R<0> LOC = K6;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C3_R<0> LOC = L20;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C0_R<1> LOC = AF5;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C1_R<1> LOC = H3;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C2_R<1> LOC = K8;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C3_R<1> LOC = K19;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C0_R<2> LOC = AC5;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C1_R<2> LOC = D3;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C2_R<2> LOC = AD3;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C3_R<2> LOC = N21;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C0_R<3> LOC = R10;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C1_R<3> LOC = E4;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C2_R<3> LOC = H6;
NET AsicOut_SAMPLING_TIMING_OUTPUT_SIGNAL_C3_R<3> LOC = M21;
# TRIG_MON --LM repurposed to RD_EN 1->16!
#NET AsicOut_MONITOR_TRIG_C0_R<0> LOC = AD6;
#NET AsicOut_MONITOR_TRIG_C1_R<0> LOC = L1;
#NET AsicOut_MONITOR_TRIG_C2_R<0> LOC = L6;
#NET AsicOut_MONITOR_TRIG_C3_R<0> LOC = N26;
#NET AsicOut_MONITOR_TRIG_C0_R<1> LOC = AA10;
#NET AsicOut_MONITOR_TRIG_C1_R<1> LOC = K1;
#NET AsicOut_MONITOR_TRIG_C2_R<1> LOC = L8;
#NET AsicOut_MONITOR_TRIG_C3_R<1> LOC = C24;
#
#NET AsicOut_MONITOR_TRIG_C0_R<2> LOC = AE5;
#NET AsicOut_MONITOR_TRIG_C1_R<2> LOC = M1;
#NET AsicOut_MONITOR_TRIG_C2_R<2> LOC = J7;
#NET AsicOut_MONITOR_TRIG_C3_R<2> LOC = D23;
#NET AsicOut_MONITOR_TRIG_C0_R<3> LOC = AF6;
#NET AsicOut_MONITOR_TRIG_C1_R<3> LOC = L2;
#NET AsicOut_MONITOR_TRIG_C2_R<3> LOC = K7;
#NET AsicOut_MONITOR_TRIG_C3_R<3> LOC = N25;
# 2015.09.10 This signal was modified to a global for new C02 and C13.
# KN
NET AsicIn_STORAGE_TO_WILK_ENABLE LOC = W25;
# Previously it was point to point
# KN
#NET AsicIn_STORAGE_TO_WILK_ENABLE<0> LOC = AD6;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<1> LOC = L1;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<2> LOC = L6;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<3> LOC = N26;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<4> LOC = AA10;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<5> LOC = K1;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<6> LOC = L8;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<7> LOC = C24;
#
#NET AsicIn_STORAGE_TO_WILK_ENABLE<8> LOC = AE5;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<9> LOC = M1;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<10> LOC = J7;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<11> LOC = D23;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<12> LOC = AF6;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<13> LOC = L2;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<14> LOC = K7;
#NET AsicIn_STORAGE_TO_WILK_ENABLE<15> LOC = N25;
###############
###############
# MONTIMING
NET AsicOut_SAMPLING_TIMING_MONITOR_C0_R<0> LOC = M10;
NET AsicOut_SAMPLING_TIMING_MONITOR_C1_R<0> LOC = Y16;
NET AsicOut_SAMPLING_TIMING_MONITOR_C2_R<0> LOC = AA26; # changed (carrier02 sch update required)
NET AsicOut_SAMPLING_TIMING_MONITOR_C3_R<0> LOC = AC26; # changed (carrier02 sch update required)
NET AsicOut_SAMPLING_TIMING_MONITOR_C0_R<1> LOC = U23;
NET AsicOut_SAMPLING_TIMING_MONITOR_C1_R<1> LOC = AA22;
NET AsicOut_SAMPLING_TIMING_MONITOR_C2_R<1> LOC = AC25;
NET AsicOut_SAMPLING_TIMING_MONITOR_C3_R<1> LOC = AE25;
NET AsicOut_SAMPLING_TIMING_MONITOR_C0_R<2> LOC = AA15;
NET AsicOut_SAMPLING_TIMING_MONITOR_C1_R<2> LOC = Y20;
NET AsicOut_SAMPLING_TIMING_MONITOR_C2_R<2> LOC = AB26; # changed (carrier02 sch update required)
NET AsicOut_SAMPLING_TIMING_MONITOR_C3_R<2> LOC = AF23; # changed (carrier02 sch update required)
NET AsicOut_SAMPLING_TIMING_MONITOR_C0_R<3> LOC = V26;
NET AsicOut_SAMPLING_TIMING_MONITOR_C1_R<3> LOC = P26;
NET AsicOut_SAMPLING_TIMING_MONITOR_C2_R<3> LOC = AA25;
NET AsicOut_SAMPLING_TIMING_MONITOR_C3_R<3> LOC = AE26;
# DATA
NET AsicOut_DATA_BUS_C0<0> LOC = AD1;
NET AsicOut_DATA_BUS_C0<1> LOC = AC2;
NET AsicOut_DATA_BUS_C0<2> LOC = AC1;
NET AsicOut_DATA_BUS_C0<3> LOC = AB1;
NET AsicOut_DATA_BUS_C0<4> LOC = AA2;
NET AsicOut_DATA_BUS_C0<5> LOC = AA1;
NET AsicOut_DATA_BUS_C0<6> LOC = Y1;
NET AsicOut_DATA_BUS_C0<7> LOC = W2;
NET AsicOut_DATA_BUS_C0<8> LOC = W1;
NET AsicOut_DATA_BUS_C0<9> LOC = V1;
NET AsicOut_DATA_BUS_C0<10> LOC = U2;
NET AsicOut_DATA_BUS_C0<11> LOC = U1;
NET AsicOut_DATA_BUS_C1<0> LOC = AA4;
NET AsicOut_DATA_BUS_C1<1> LOC = Y5;
NET AsicOut_DATA_BUS_C1<2> LOC = W5;
NET AsicOut_DATA_BUS_C1<3> LOC = V5;
NET AsicOut_DATA_BUS_C1<4> LOC = V3;
NET AsicOut_DATA_BUS_C1<5> LOC = U4;
NET AsicOut_DATA_BUS_C1<6> LOC = T4;
NET AsicOut_DATA_BUS_C1<7> LOC = R5;
NET AsicOut_DATA_BUS_C1<8> LOC = R3;
NET AsicOut_DATA_BUS_C1<9> LOC = P3;
NET AsicOut_DATA_BUS_C1<10> LOC = N4;
NET AsicOut_DATA_BUS_C1<11> LOC = M4;
NET AsicOut_DATA_BUS_C2<0> LOC = R20;
NET AsicOut_DATA_BUS_C2<1> LOC = T20;
NET AsicOut_DATA_BUS_C2<2> LOC = U21;
NET AsicOut_DATA_BUS_C2<3> LOC = U19;
NET AsicOut_DATA_BUS_C2<4> LOC = V20;
NET AsicOut_DATA_BUS_C2<5> LOC = K9;
NET AsicOut_DATA_BUS_C2<6> LOC = Y6;
NET AsicOut_DATA_BUS_C2<7> LOC = V6;
NET AsicOut_DATA_BUS_C2<8> LOC = U7;
NET AsicOut_DATA_BUS_C2<9> LOC = T6;
NET AsicOut_DATA_BUS_C2<10> LOC = R7;
NET AsicOut_DATA_BUS_C2<11> LOC = P8;
NET AsicOut_DATA_BUS_C3<0> LOC = AD24;
NET AsicOut_DATA_BUS_C3<1> LOC = AC24;
NET AsicOut_DATA_BUS_C3<2> LOC = AA23;
NET AsicOut_DATA_BUS_C3<3> LOC = Y24;
NET AsicOut_DATA_BUS_C3<4> LOC = V23;
NET AsicOut_DATA_BUS_C3<5> LOC = U22;
NET AsicOut_DATA_BUS_C3<6> LOC = N17;
NET AsicOut_DATA_BUS_C3<7> LOC = T23;
NET AsicOut_DATA_BUS_C3<8> LOC = R23;
NET AsicOut_DATA_BUS_C3<9> LOC = P22;
NET AsicOut_DATA_BUS_C3<10> LOC = N22;
NET AsicOut_DATA_BUS_C3<11> LOC = N24;
# START --LM does not exist anymore on IRS3D -> repurposed to GCC_CLKP
#NET AsicIn_WILK_COUNTER_START_C<0> LOC = AA12;
#NET AsicIn_WILK_COUNTER_START_C<1> LOC = Y21;
#NET AsicIn_WILK_COUNTER_START_C<2> LOC = T9;
#NET AsicIn_WILK_COUNTER_START_C<3> LOC = L24;
# NEW - used to control calibration board steering
NET CALIB_ADDR<0> LOC = L24;
NET CALIB_ADDR<1> LOC = AC3;
NET CALIB_ADDR<2> LOC = Y21;
NET CALIB_ADDR<3> LOC = AE2;
NET CALIB_ADDR<4> LOC = W8;
NET CALIB_ADDR<5> LOC = N19;
# 2015.09.10 Swapped from column wise to point-to-point for new Carrier 02, 13
# KN
NET GCC_CLKP_R0_C<0> LOC = AD6;
NET GCC_CLKP_R0_C<1> LOC = L1;
NET GCC_CLKP_R0_C<2> LOC = L6;
NET GCC_CLKP_R0_C<3> LOC = N26;
NET GCC_CLKP_R1_C<0> LOC = V12;
NET GCC_CLKP_R1_C<1> LOC = AF22;
NET GCC_CLKP_R1_C<2> LOC = R9;
NET GCC_CLKP_R1_C<3> LOC = L21;
NET GCC_CLKP_R2_C<0> LOC = AE5;
NET GCC_CLKP_R2_C<1> LOC = M1;
NET GCC_CLKP_R2_C<2> LOC = J7;
NET GCC_CLKP_R2_C<3> LOC = D23;
NET GCC_CLKP_R3_C<0> LOC = Y11;
NET GCC_CLKP_R3_C<1> LOC = AB22;
NET GCC_CLKP_R3_C<2> LOC = M9;
NET GCC_CLKP_R3_C<3> LOC = J20;
#
#
#NET GCC_CLKP<0> LOC = AA12;
#NET GCC_CLKP<1> LOC = Y21;
#NET GCC_CLKP<2> LOC = T9;
#NET GCC_CLKP<3> LOC = L24;
# DOE_active_low
NET AsicIn_DATA_OUTPUT_DISABLE_R<0> LOC = AA9; # done
NET AsicIn_DATA_OUTPUT_DISABLE_R<1> LOC = W17; # done
NET AsicIn_DATA_OUTPUT_DISABLE_R<2> LOC = J9; # done
NET AsicIn_DATA_OUTPUT_DISABLE_R<3> LOC = L19; # done
# WR_ADDR (row select)
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<1> LOC = P17;  # WR_RS_S1
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<2> LOC = AB15; # WR_RS_S2
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<3> LOC = V15;  # WR_RS_S3
# WR_ADDR (column select / enable?)
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<4> LOC = Y26;  # WR_CS_S0
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<5> LOC = W26;  # WR_CS_S1
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<6> LOC = U24;  # WR_CS_S2
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<7> LOC = T26;  # WR_CS_S3
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_NO_LSB<8> LOC = R26;  # WR_CS_S4
NET AsicIn_SAMPLING_TO_STORAGE_ADDRESS_ENABLE LOC = AD26; # WR_CS_S5 / this is an enable.
# CLEAR
#NET AsicIn_WILK_COUNTER_RESET LOC = W25;
# RAMP
NET AsicIn_WILK_RAMP_ACTIVE LOC = U13;
# DO (serial/increment interface for sample / channel select)
NET AsicIn_CHANNEL_AND_SAMPLE_ADDRESS_SERIAL_SHIFT_CLOCK LOC = W14;
NET AsicIn_CHANNEL_AND_SAMPLE_ADDRESS_DIR LOC = AB17; # 0=increment mode, 1=shift in mode
NET AsicIn_CHANNEL_AND_SAMPLE_ADDRESS_SERIAL_INPUT LOC = AA16;
# RD (serial/increment interface for storage to wilkinson address)
NET AsicIn_STORAGE_TO_WILK_ADDRESS_SERIAL_SHIFT_CLOCK LOC = V16;
NET AsicIn_STORAGE_TO_WILK_ADDRESS_DIR LOC = AB19; # 0=increment mode, 1=shift in mode
NET AsicIn_STORAGE_TO_WILK_ADDRESS_SERIAL_INPUT LOC = AA17;
# RD_ENA
#NET AsicIn_STORAGE_TO_WILK_ENABLE LOC = AB21; - LM Repurposed to GCC_reset
NET GCC_RESET LOC = AB21;
###############
###############
#####Non-ASIC Signals################
# MON (test/debugging inputs/outputs)
# !!!!!CHANGE THESE FOR Interconnect Rev C!!!!!
NET USE_LOCAL_CLOCK_JUMPER LOC = J16 | IOSTANDARD = LVCMOS33 | PULLUP; # remote clock enable # pulled up on interconnect revB with 2.2k
NET MON0 LOC = H14 | IOSTANDARD = LVCMOS33 | PULLDOWN;
#NET MON<0> LOC = H14 | IOSTANDARD = LVCMOS33;
NET MON<1> LOC = J15 | IOSTANDARD = LVCMOS33; #LM - to export directly a full-rail signal. To revert change below and also the diff pair
NET MON<2> LOC = H15 | IOSTANDARD = LVCMOS33;
#NET MON<1> LOC = J15 | IOSTANDARD = LVDS_33;  #+ input to CAL EDGE
#NET MON<2> LOC = H15 | IOSTANDARD = LVDS_33;  #- input to CAL EDGE
##################
##I2C interfaces##
##################
# Special interfaces for the I2C for VadjP/VadjN
# I2C DACs for sampling rate control (one DAC per row; two per I2C bus)
NET I2C_DAC_SCL_R01 LOC = H13 | IOSTANDARD = LVCMOS33; # pulled up on interconnect revB with 2.2k
NET I2C_DAC_SDA_R01 LOC = F14 | IOSTANDARD = LVCMOS33; # pulled up on interconnect revB with 2.2k
NET I2C_DAC_SCL_R23 LOC = E14 | IOSTANDARD = LVCMOS33; # pulled up on interconnect revB with 2.2k
NET I2C_DAC_SDA_R23 LOC = K14 | IOSTANDARD = LVCMOS33; # pulled up on interconnect revB with 2.2k
# I2C interface for SCROD EEPROM and temperature sensor
NET I2C_SCL<0> LOC = B23 | IOSTANDARD = LVCMOS33;
NET I2C_SDA<0> LOC = A23 | IOSTANDARD = LVCMOS33 | PULLUP;
# I2C interface for SCROD fiberoptic transceiver 0
NET I2C_SCL<1> LOC = C13 | IOSTANDARD = LVCMOS33;
NET I2C_SDA<1> LOC = D13 | IOSTANDARD = LVCMOS33;
# I2C interface for SCROD fiberoptic transceiver 1
NET I2C_SCL<2> LOC = K12 | IOSTANDARD = LVCMOS33;
NET I2C_SDA<2> LOC = A14 | IOSTANDARD = LVCMOS33;
# I2C interface for row 0,1 temperature sensors (x8), eeproms (x2), and gpios (x2) for cal signals (and SMPL_SEL_ANY)
NET I2C_SCL<3> LOC = M18 | IOSTANDARD = LVCMOS25;
NET I2C_SDA<3> LOC = N18 | IOSTANDARD = LVCMOS25;
# I2C interface for row 2,3 temperature sensors (x8), eeproms (x2), and gpios (x2) for cal signals (and SMPL_SEL_ANY)
NET I2C_SCL<4> LOC = L10 | IOSTANDARD = LVCMOS25;
NET I2C_SDA<4> LOC = K10 | IOSTANDARD = LVCMOS25;
# I2C interface for row 0,1 GPIO serial for ASIC shift out signals
NET I2C_SCL<5> LOC = AD4 | IOSTANDARD = LVCMOS25;
NET I2C_SDA<5> LOC = AE1 | IOSTANDARD = LVCMOS25;
# I2C interface for row 2,3 GPIO serial for ASIC shift out signals
NET I2C_SCL<6> LOC = AB4 | IOSTANDARD = LVCMOS25;
NET I2C_SDA<6> LOC = P19 | IOSTANDARD = LVCMOS25;
# I2C interface for interconnect rev C GPIO to control calibration signals
NET I2C_SCL<7> LOC =  J2 | IOSTANDARD = LVCMOS25;
NET I2C_SDA<7> LOC = W18 | IOSTANDARD = LVCMOS25;
# 250 MHz oscillator
NET BOARD_CLOCKP LOC = U25 | IOSTANDARD = LVDS_25;
NET BOARD_CLOCKN LOC = U26 | IOSTANDARD = LVDS_25;
# DIAGNOSTIC PINS (LEDS, MONITOR HEADER, etc.)
NET LEDS<0>  LOC = f18 | IOSTANDARD = LVCMOS33;
NET LEDS<1>  LOC = e18 | IOSTANDARD = LVCMOS33;
NET LEDS<2>  LOC = g16 | IOSTANDARD = LVCMOS33;
NET LEDS<3>  LOC = f17 | IOSTANDARD = LVCMOS33;
NET LEDS<4>  LOC = f20 | IOSTANDARD = LVCMOS33;
NET LEDS<5>  LOC = e20 | IOSTANDARD = LVCMOS33;
NET LEDS<6>  LOC = h17 | IOSTANDARD = LVCMOS33;
NET LEDS<7>  LOC = g17 | IOSTANDARD = LVCMOS33;
NET LEDS<8>  LOC = c21 | IOSTANDARD = LVCMOS33;
NET LEDS<9>  LOC = b21 | IOSTANDARD = LVCMOS33;
NET LEDS<10> LOC = h18 | IOSTANDARD = LVCMOS33;
NET LEDS<11> LOC = h19 | IOSTANDARD = LVCMOS33;
NET LEDS<12> LOC = b22 | IOSTANDARD = LVCMOS33;
NET LEDS<13> LOC = a22 | IOSTANDARD = LVCMOS33;
NET LEDS<14> LOC = g19 | IOSTANDARD = LVCMOS33;
NET LEDS<15> LOC = f19 | IOSTANDARD = LVCMOS33;
# FTSW Inputs
NET RJ45_ACK_P LOC = ad14 | IOSTANDARD = LVDS_25;
NET RJ45_ACK_N LOC = af14 | IOSTANDARD = LVDS_25;
NET RJ45_TRG_P LOC = ab14 | IOSTANDARD = LVDS_25 | diff_term=true;
NET RJ45_TRG_N LOC = ac14 | IOSTANDARD = LVDS_25 | diff_term=true;
#NET RJ45_RSV_P LOC = ae15 | IOSTANDARD = LVDS_25 | diff_term=true; ##LM no handshaking with CAJIPCI here - need to incorporate most recent version
#NET RJ45_RSV_N LOC = af15 | IOSTANDARD = LVDS_25 | diff_term=true;
NET RJ45_RSV_P LOC = ae15 | IOSTANDARD = LVDS_25 ;
NET RJ45_RSV_N LOC = af15 | IOSTANDARD = LVDS_25 ;
#NET RJ45_CLK_P LOC = ae13 | IOSTANDARD = LVDS_25 | diff_term=true;
#NET RJ45_CLK_N LOC = af13 | IOSTANDARD = LVDS_25 | diff_term=true;
NET RJ45_CLK_P LOC = ae13 | IOSTANDARD = LVDS_33 | diff_term=true;
NET RJ45_CLK_N LOC = af13 | IOSTANDARD = LVDS_33 | diff_term=true;
NET SPARE LOC = R25;
########################################################
## We need new timing constraints!
#OLD timing constraints
#NET map_clocking_and_ftsw_interface/map_FTSW_interface/sig_jclk PERIOD = 7.8 ns;
#NET map_clocking_and_ftsw_interface/map_FTSW_interface/map_belle2clk/map_pll/sig_clk1 PERIOD = 7.8 ns;
#NET map_clocking_and_ftsw_interface/internal_BOARD_CLOCK PERIOD = 4.0 ns;
#NET internal_CLOCK_SST PERIOD = 47.1 ns;
#NET internal_CLOCK_4xSST PERIOD = 11.7 ns;
##NET map_clocking_and_ftsw_interface/internal_CLOCK_83kHz CLOCK_DEDICATED_ROUTE = FALSE;
##NET map_clocking_and_ftsw_interface/internal_CLOCK_80Hz CLOCK_DEDICATED_ROUTE = FALSE;
#The location of the FTSW receiver PLL seems to only work in specific locations.
#The one below is verified working... others may also work but have not been
#systematically tried.
#INST map_clock_generation/map_FTSW_interface/map_belle2clk/map_pll/map_pll LOC = PLL_ADV_X0Y0; -- LM: reintroduce if necessary
##########
#NEW timing constraints
#LM - these ARE ALL MODIFIED As in rev1.....
NET "BOARD_CLOCKP" TNM_NET = BOARD_CLOCK;
#NET "map_clock_generation/internal_BOARD_CLOCK" TNM_NET = BOARD_CLOCK;
TIMESPEC "TS_BOARD_CLOCK" = PERIOD "BOARD_CLOCK" 4 ns HIGH 50%;
NET "RJ45_CLK_P" TNM_NET = DISTRIBUTED_CLOCK;
TIMESPEC "TS_DISTRIBUTED_CLOCK" = PERIOD "DISTRIBUTED_CLOCK" 46.882 ns HIGH 50%;
############FIBEROPTIC PINS AND SIGNALS########################
## UCF generated for xc6slx150t-fgg676-3 device
#################################################################################
## Modified for GigE
NET "map_readout_interfaces/U_S6EthTop/U_GtpS6/usrClkSource" TNM_NET="usrClkSource";
TIMESPEC "TS_usrClkSource"=PERIOD "usrClkSource" 8 ns HIGH 50 %;
## UCF generated for xc6slx150t-fgg676-3 device
# 156.25MHz GTP Reference clock constraint
#NET "map_readout_interfaces/map_daq_fifo_layer/synthesize_with_aurora.map_two_lane_aurora_interface/GTPD2_left_i" TNM_NET = GT_REFCLK;
#TIMESPEC TS_GTPD2_LEFT_I = PERIOD "GT_REFCLK" 156.25 MHz HIGH 50%;
#
## User Clock Constraint: Value is selected based on the line rate (3.125 Gbps) and lane width (4-Byte)
#NET "map_readout_interfaces/map_daq_fifo_layer/internal_FIBER_USER_CLOCK" TNM_NET = USER_CLK;
#TIMESPEC TS_USER_CLK_I = PERIOD "USER_CLK" 78.125 MHz HIGH 50%;
#NET "map_readout_interfaces/map_daq_fifo_layer/internal_FIFO_CLOCK" TNM_NET = FIFO_CLK;
#TIMESPEC TS_FIFO_CLK_I = PERIOD "FIFO_CLK" 78.125 MHz HIGH 50%;
#
## Sync Clock Constraint: Value is selected based on the line rate (3.125 Gbps) and lane width (4-Byte)
#NET "map_readout_interfaces/map_daq_fifo_layer/synthesize_with_aurora.map_two_lane_aurora_interface/sync_clk_0_i" TNM_NET = SYNC_CLK;
#TIMESPEC TS_SYNC_CLK_0 = PERIOD "SYNC_CLK" 312.5 MHz HIGH 50%;
#
##Site specifications.  Only the GTPA dual site is strictly necessary, as far as I know.
#INST map_readout_interfaces/map_daq_fifo_layer/synthesize_with_aurora.map_two_lane_aurora_interface/aurora_module_i/gtp_wrapper_i/gtp_tile_inst/gtpa1_dual_i LOC=GTPA1_DUAL_X0Y1;
# GT REFCLK for both transceivers
NET FIBER_REFCLKP LOC=B10 | IOSTANDARD = LVDS_25 | DIFF_TERM = TRUE;
NET FIBER_REFCLKN LOC=A10 | IOSTANDARD = LVDS_25 | DIFF_TERM = TRUE;
# fiber optic transceiver 0
NET FIBER_0_DISABLE_TRANSCEIVER LOC=E10 | IOSTANDARD = LVCMOS33; # TX_DIS0 on schematic
#NET FIBER_TRANSCEIVER_0_LASER_FAULT_DETECTED_IN_TRANSMITTER LOC = g12 | IOSTANDARD = LVCMOS33; # TX_FAULT0 on schematic
#NET FIBER_TRANSCEIVER_0_LOSS_OF_SIGNAL_DETECTED_BY_RECEIVER LOC = b5 | IOSTANDARD = LVCMOS33; # LOS_0 on schematic
#NET FIBER_TRANSCEIVER_0_MODULE_DEFINITION_0_LOW_IF_PRESENT LOC = a13 | IOSTANDARD = LVCMOS33; # MOD0_0 on schematic
#RX and TX for transceiver 0
NET FIBER_0_RXP LOC=D7;
NET FIBER_0_RXN LOC=C7;
NET FIBER_0_TXP LOC=B6;
NET FIBER_0_TXN LOC=A6;
## fiber optic transceiver 1
#NET FIBER_1_DISABLE_TRANSCEIVER LOC = g13 | IOSTANDARD = LVCMOS33; # TX_DIS1 on schematic
##RX and TX for transceiver 1
#NET FIBER_1_RXP LOC=D9;
#NET FIBER_1_RXN LOC=C9;
#NET FIBER_1_TXP LOC=B8;
#NET FIBER_1_TXN LOC=A8;
#####################USB IOs and timing constraints###########################
#NET USB_IFCLK   LOC = "b14" | IOSTANDARD = LVCMOS33; # on SCROD revA2, IFCLK is connected to b14
#NET "map_readout_interfaces/map_daq_fifo_layer/internal_USB_CLOCK" TNM_NET = IFCLK_48M;
#TIMESPEC "TS_IFCLK_48M" = PERIOD "IFCLK_48M" 20.833 ns HIGH 50%;
#NET USB_CLKOUT  LOC = "e13" | IOSTANDARD = LVCMOS33; # on SCROD revA2, CLKOUT is connected to e13
#NET USB_FDD<0>  LOC = "f5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<1>  LOC = "e6"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<2>  LOC = "e5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<3>  LOC = "h9"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<4>  LOC = "g9"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<5>  LOC = "a3"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<6>  LOC = "a2"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<7>  LOC = "f9"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<8>  LOC = "e8"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<9>  LOC = "d5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<10> LOC = "c5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<11> LOC = "h10" | IOSTANDARD = LVCMOS33;
#NET USB_FDD<12> LOC = "g10" | IOSTANDARD = LVCMOS33;
#NET USB_FDD<13> LOC = "b4"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<14> LOC = "a4"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<15> LOC = "f10" | IOSTANDARD = LVCMOS33;
#NET USB_PA0     LOC = "g7"  | IOSTANDARD = LVCMOS33;
#NET USB_PA1     LOC = "h8"  | IOSTANDARD = LVCMOS33;
#NET USB_PA2     LOC = "g8"  | IOSTANDARD = LVCMOS33;
#NET USB_PA3     LOC = "f7"  | IOSTANDARD = LVCMOS33;
#NET USB_PA4     LOC = "f6"  | IOSTANDARD = LVCMOS33;
#NET USB_PA5     LOC = "c3"  | IOSTANDARD = LVCMOS33;
#NET USB_PA6     LOC = "b3"  | IOSTANDARD = LVCMOS33;
#NET USB_PA7     LOC = "g6"  | IOSTANDARD = LVCMOS33;
#NET USB_CTL0    LOC = "f12" | IOSTANDARD = LVCMOS33;
#NET USB_CTL1    LOC = "e12" | IOSTANDARD = LVCMOS33;
#NET USB_CTL2    LOC = "j11" | IOSTANDARD = LVCMOS33;
#NET USB_RDY0    LOC = "g11" | IOSTANDARD = LVCMOS33;
#NET USB_RDY1    LOC = "h12" | IOSTANDARD = LVCMOS33;
#NET USB_WAKEUP  LOC = "f11" | IOSTANDARD = LVCMOS33;
#
#
#LM these are the Kurtis original
#NET "map_clock_generation/internal_BOARD_CLOCK" TNM_NET = BOARD_CLOCK;
#TIMESPEC "TS_BOARD_CLOCK" = PERIOD "BOARD_CLOCK" 4 ns HIGH 50%;
#############FIBEROPTIC PINS AND SIGNALS########################
### UCF generated for xc6slx150t-fgg676-3 device
##################################################################################
#
### UCF generated for xc6slx150t-fgg676-3 device
## 156.25MHz GTP Reference clock constraint
#NET "map_readout_interfaces/map_daq_fifo_layer/synthesize_with_aurora.map_two_lane_aurora_interface/GTPD2_left_i" TNM_NET = GT_REFCLK;
#TIMESPEC TS_GTPD2_LEFT_I = PERIOD "GT_REFCLK" 156.25 MHz HIGH 50%;
#
## User Clock Constraint: Value is selected based on the line rate (3.125 Gbps) and lane width (4-Byte)
#NET "map_readout_interfaces/map_daq_fifo_layer/internal_FIBER_USER_CLOCK" TNM_NET = USER_CLK;
#TIMESPEC TS_USER_CLK_I = PERIOD "USER_CLK" 78.125 MHz HIGH 50%;
#NET "map_readout_interfaces/map_daq_fifo_layer/internal_FIFO_CLOCK" TNM_NET = FIFO_CLK;
#TIMESPEC TS_FIFO_CLK_I = PERIOD "FIFO_CLK" 78.125 MHz HIGH 50%;
#
## Sync Clock Constraint: Value is selected based on the line rate (3.125 Gbps) and lane width (4-Byte)
#NET "map_readout_interfaces/map_daq_fifo_layer/synthesize_with_aurora.map_two_lane_aurora_interface/sync_clk_0_i" TNM_NET = SYNC_CLK;
#TIMESPEC TS_SYNC_CLK_0 = PERIOD "SYNC_CLK" 312.5 MHz HIGH 50%;
#
##Site specifications.  Only the GTPA dual site is strictly necessary, as far as I know.
#INST map_readout_interfaces/map_daq_fifo_layer/synthesize_with_aurora.map_two_lane_aurora_interface/aurora_module_i/gtp_wrapper_i/gtp_tile_inst/gtpa1_dual_i LOC=GTPA1_DUAL_X0Y1;
#
#
#
## GT REFCLK for both transceivers
#NET FIBER_REFCLKP LOC=B10 | IOSTANDARD = LVDS_25 | DIFF_TERM = TRUE;
#NET FIBER_REFCLKN LOC=A10 | IOSTANDARD = LVDS_25 | DIFF_TERM = TRUE;
#
## fiber optic transceiver 0
#NET FIBER_0_DISABLE_TRANSCEIVER LOC=E10 | IOSTANDARD = LVCMOS33; # TX_DIS0 on schematic
##NET FIBER_TRANSCEIVER_0_LASER_FAULT_DETECTED_IN_TRANSMITTER LOC = g12 | IOSTANDARD = LVCMOS33; # TX_FAULT0 on schematic
##NET FIBER_TRANSCEIVER_0_LOSS_OF_SIGNAL_DETECTED_BY_RECEIVER LOC = b5 | IOSTANDARD = LVCMOS33; # LOS_0 on schematic
##NET FIBER_TRANSCEIVER_0_MODULE_DEFINITION_0_LOW_IF_PRESENT LOC = a13 | IOSTANDARD = LVCMOS33; # MOD0_0 on schematic
##RX and TX for transceiver 0
#NET FIBER_0_RXP LOC=D7;
#NET FIBER_0_RXN LOC=C7;
#NET FIBER_0_TXP LOC=B6;
#NET FIBER_0_TXN LOC=A6;
#
## fiber optic transceiver 1
#NET FIBER_1_DISABLE_TRANSCEIVER LOC = g13 | IOSTANDARD = LVCMOS33; # TX_DIS1 on schematic
##RX and TX for transceiver 1
#NET FIBER_1_RXP LOC=D9;
#NET FIBER_1_RXN LOC=C9;
#NET FIBER_1_TXP LOC=B8;
#NET FIBER_1_TXN LOC=A8;
#
#####################USB IOs and timing constraints###########################
#NET USB_IFCLK   LOC = "b14" | IOSTANDARD = LVCMOS33; # on SCROD revA2, IFCLK is connected to b14
#NET "map_readout_interfaces/map_daq_fifo_layer/internal_USB_CLOCK" TNM_NET = IFCLK_48M;
#TIMESPEC "TS_IFCLK_48M" = PERIOD "IFCLK_48M" 20.833 ns HIGH 50%;
#NET USB_CLKOUT  LOC = "e13" | IOSTANDARD = LVCMOS33; # on SCROD revA2, CLKOUT is connected to e13
#NET USB_FDD<0>  LOC = "f5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<1>  LOC = "e6"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<2>  LOC = "e5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<3>  LOC = "h9"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<4>  LOC = "g9"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<5>  LOC = "a3"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<6>  LOC = "a2"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<7>  LOC = "f9"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<8>  LOC = "e8"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<9>  LOC = "d5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<10> LOC = "c5"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<11> LOC = "h10" | IOSTANDARD = LVCMOS33;
#NET USB_FDD<12> LOC = "g10" | IOSTANDARD = LVCMOS33;
#NET USB_FDD<13> LOC = "b4"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<14> LOC = "a4"  | IOSTANDARD = LVCMOS33;
#NET USB_FDD<15> LOC = "f10" | IOSTANDARD = LVCMOS33;
#NET USB_PA0     LOC = "g7"  | IOSTANDARD = LVCMOS33;
#NET USB_PA1     LOC = "h8"  | IOSTANDARD = LVCMOS33;
#NET USB_PA2     LOC = "g8"  | IOSTANDARD = LVCMOS33;
#NET USB_PA3     LOC = "f7"  | IOSTANDARD = LVCMOS33;
#NET USB_PA4     LOC = "f6"  | IOSTANDARD = LVCMOS33;
#NET USB_PA5     LOC = "c3"  | IOSTANDARD = LVCMOS33;
#NET USB_PA6     LOC = "b3"  | IOSTANDARD = LVCMOS33;
#NET USB_PA7     LOC = "g6"  | IOSTANDARD = LVCMOS33;
#NET USB_CTL0    LOC = "f12" | IOSTANDARD = LVCMOS33;
#NET USB_CTL1    LOC = "e12" | IOSTANDARD = LVCMOS33;
#NET USB_CTL2    LOC = "j11" | IOSTANDARD = LVCMOS33;
#NET USB_RDY0    LOC = "g11" | IOSTANDARD = LVCMOS33;
#NET USB_RDY1    LOC = "h12" | IOSTANDARD = LVCMOS33;
#NET USB_WAKEUP  LOC = "f11" | IOSTANDARD = LVCMOS33;